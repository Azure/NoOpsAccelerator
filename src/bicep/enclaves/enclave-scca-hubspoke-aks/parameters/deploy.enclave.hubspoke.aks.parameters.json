{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "parRequired": {
      "value": {
        "orgPrefix": "anoa",
        "templateVersion": "v1.0",
        "deployEnvironment": "aks"
      }
    },
    "parTags": {
      "value": {
        "organization": "anoa",
        "region": "eastus",
        "templateVersion": "v1.0",
        "deployEnvironment": "aks",
        "deploymentType": "NoOpsBicep"
      }
    },
    "parTenantId": {
      "value": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
    },
    "parRootMg": {
      "value": "ANOA"
    },
    "parRequireAuthorizationForGroupCreation": {
      "value": true
    },
    "parManagementGroups": {
      "value": [
        {
          "name": "anoa",
          "displayName": "ANOA",
          "parentMGName": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
        },
        {
          "name": "anoa-lzs",
          "displayName": "anoa-lzs",
          "parentMGName": "anoa"
        },
        {
          "name": "anoa-lzs-sandbox",
          "displayName": "anoa-lzs-sandbox",
          "parentMGName": "anoa-lzs"
        },
        {
          "name": "anoa-lzs-workloads",
          "displayName": "anoa-lzs-workloads",
          "parentMGName": "anoa-lzs"
        },
        {
          "name": "anoa-lzs-internal",
          "displayName": "anoa-lzs-internal",
          "parentMGName": "anoa-lzs-workloads"
        },
        {
          "name": "anoa-lzs-internal-dev",
          "displayName": "anoa-lzs-internal-nonprod",
          "parentMGName": "anoa-lzs-internal"
        },
        {
          "name": "anoa-lzs-internal-prod",
          "displayName": "anoa-lzs-internal-prod",
          "parentMGName": "anoa-lzs-internal"
        },
        {
          "name": "anoa-platform",
          "displayName": "anoa-platform",
          "parentMGName": "anoa"
        },
        {
          "name": "anoa-transport",
          "displayName": "anoa-transport",
          "parentMGName": "anoa-platform"
        },
        {
          "name": "anoa-management",
          "displayName": "anoa-management",
          "parentMGName": "anoa-platform"
        },
        {
          "name": "anoa-identity",
          "displayName": "anoa-identity",
          "parentMGName": "anoa-platform"
        }
      ]
    },
    "parSubscriptions": {
      "value": [
        {
          "subscriptionId": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx",
          "managementGroupName": "anoa-management"
        }
      ]
    },    
    "parBulitInPolicy": {
      "value": {
        "policies": [
          {
            "enabled": false,
            "name": "Location",
            "policyAssignmentManagementGroupId": "anoa",
            "enforcementMode": "Default",
            "allowedLocations": [
              "EastUS",
              "WestUS",
              "usgovvirginia",
              "usgovarizona"
            ]
          }
        ]
      }
    },
    "parCustomPolicy": {
      "value": {
        "policies": [
          {
            "enabled": true,
            "name": "Custom - Compute Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policyAssignmentManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "Compute"
          },
          {
            "enabled": true,
            "name": "Custom - Data Protection Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "Data Protection"
          },
          {
            "enabled": true,
            "name": "Custom - Identity Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "IAM"
          },
          {
            "enabled": true,
            "name": "Custom - Key Vault Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "Key Vault"
          },
          {
            "enabled": true,
            "name": "Custom - Network Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "Network"
          },
          {
            "enabled": true,
            "name": "Custom - Security Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "Security"
          },
          {
            "enabled": false,
            "name": "Custom - SQL Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "SQL"
          },
          {
            "enabled": true,
            "name": "Custom - Storage Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "Storage"
          },
          {
            "enabled": true,
            "name": "Custom - Tagging Governance Initiative",
            "policyDefinitionManagementGroupId": "anoa",
            "policySource": "ANOA",
            "policyCategory": "Tagging"
          }
        ]
      }
    },
    "parRoleDefinitionInfo": {
      "value": {
        "definitions": [
          {
            "roleID": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx",
            "roleName": "Custom - VM Operator",
            "roleDescription": "Start and Stop Virtual Machines and reader",
            "actions": [
              "Microsoft.Compute/virtualMachines/read",
              "Microsoft.Compute/virtualMachines/start/action",
              "Microsoft.Compute/virtualMachines/restart/action",
              "Microsoft.Resources/subscriptions/resourceGroups/read",
              "Microsoft.Compute/virtualMachines/deallocate/action",
              "Microsoft.Compute/virtualMachineScaleSets/deallocate/action",
              "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/deallocate/action",
              "Microsoft.Compute/virtualMachines/powerOff/action"
            ],
            "notActions": [],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx",
            "roleName": "Custom - Network Operations (NetOps)",
            "roleDescription": "Platform-wide global connectivity management: virtual networks, UDRs, NSGs, NVAs, VPN, Azure ExpressRoute, and others.",
            "actions": [
              "Microsoft.Network/virtualNetworks/read",
              "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/read",
              "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/write",
              "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/delete",
              "Microsoft.Network/virtualNetworks/peer/action",
              "Microsoft.Resources/deployments/operationStatuses/read",
              "Microsoft.Resources/deployments/write",
              "Microsoft.Resources/deployments/read"
            ],
            "notActions": [],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx",
            "roleName": "Custom - Security Operations (SecOps)",
            "roleDescription": "Security Administrator role with a horizontal view across the entire Azure estate and the Azure Key Vault purge policy.",
            "actions": [
              "*/read",
              "*/register/action",
              "Microsoft.KeyVault/locations/deletedVaults/purge/action",
              "Microsoft.PolicyInsights/*",
              "Microsoft.Authorization/policyAssignments/*",
              "Microsoft.Authorization/policyDefinitions/*",
              "Microsoft.Authorization/policyExemptions/*",
              "Microsoft.Authorization/policySetDefinitions/*",
              "Microsoft.Insights/alertRules/*",
              "Microsoft.Resources/deployments/*",
              "Microsoft.Security/*",
              "Microsoft.Support/*"
            ],
            "notActions": [],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx",
            "roleName": "Custom - Landing Zone Application Owner",
            "roleDescription": "Contributor role granted for application/operations team at resource group level.",
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/write",
              "Microsoft.Network/publicIPAddresses/write",
              "Microsoft.Network/virtualNetworks/write",
              "Microsoft.KeyVault/locations/deletedVaults/purge/action"
            ],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx",
            "roleName": "Custom - Landing Zone Subscription Owner",
            "roleDescription": "Delegated role for subscription owner generated from subscription Owner role.",
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/write",
              "Microsoft.Network/vpnGateways/*",
              "Microsoft.Network/expressRouteCircuits/*",
              "Microsoft.Network/routeTables/write",
              "Microsoft.Network/vpnSites/*"
            ],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx",
            "roleName": "Custom - Storage Operator",
            "roleDescription": "Custom Storage Operator role for deploying virtual machines.",
            "actions": [
              "Microsoft.Authorization/*/read",
              "Microsoft.Insights/alertRules/*",
              "Microsoft.Insights/diagnosticSettings/*",
              "Microsoft.Network/virtualNetworks/subnets/joinViaServiceEndpoint/action",
              "Microsoft.ResourceHealth/availabilityStatuses/read",
              "Microsoft.Resources/deployments/*",
              "Microsoft.Resources/subscriptions/resourceGroups/read",
              "Microsoft.Storage/storageAccounts/*",
              "Microsoft.Support/*",
              "Microsoft.Storage/storageAccounts/listkeys/action"
            ],
            "notActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          }
        ]
      }
    },
    "parHubSubscriptionId": {
      "value": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
    },
    "parHubVirtualNetworkAddressPrefix": {
      "value": "10.0.100.0/24"
    },
    "parHubSubnetAddressPrefix": {
      "value": "10.0.100.128/27"
    },
    "parIdentitySubscriptionId": {
      "value": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
    },
    "parIdentityVirtualNetworkAddressPrefix": {
      "value": "10.0.110.0/26"
    },
    "parIdentitySubnetAddressPrefix": {
      "value": "10.0.110.0/27"
    },
    "parOperationsSubscriptionId": {
      "value": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
    },
    "parOperationsVirtualNetworkAddressPrefix": {
      "value": "10.0.115.0/26"
    },
    "parOperationsSubnetAddressPrefix": {
      "value": "10.0.115.0/27"
    },
    "parSharedServicesSubscriptionId": {
      "value": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
    },
    "parSharedServicesVirtualNetworkAddressPrefix": {
      "value": "10.0.120.0/26"
    },
    "parSharedServicesSubnetAddressPrefix": {
      "value": "10.0.120.0/27"
    },
    "parNetworkArtifacts": {
      "value": {
        "enable": false,
        "artifactsKeyVault": {
          "keyVaultPolicies": {
            "objectId": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx",
            "permissions": {
              "keys": [
                "get",
                "list",
                "update"
              ],
              "secrets": [
                "all"
              ]
            },
            "tenantId": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
          }
        }
      }
    },
    "parDdosStandard": {
      "value": {
        "enabled": false
      }
    },
    "parAzureFirewallEnabled": {
      "value": true
    },
    "parFirewallClientSubnetAddressPrefix": {
      "value": "10.0.100.0/26"
    },
    "parFirewallManagementSubnetAddressPrefix": {
      "value": "10.0.100.64/26"
    },
    "parFirewallSupernetIPAddress": {
      "value": "10.0.96.0/19"
    },
    "parFirewallClientSubnetName": {
      "value": "AzureFirewallSubnet"
    },
    "parFirewallSkuTier": {
      "value": "Premium"
    },
    "parFirewallThreatIntelMode": {
      "value": "Alert"
    },
    "parFirewallIntrusionDetectionMode": {
      "value": "Alert"
    },
    "parApplicationRuleCollections": {
      "value": []
    },
    "parNetworkRuleCollections": {
      "value": []
    },
    "parStorageAccountAccess": {
      "value": {
        "enableRoleAssignmentForStorageAccount": false,
        "principalIds": [
          "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
        ],
        "roleDefinitionIdOrName": "Contributor"
      }
    },
    "parLogging": {
      "value": {
        "enableSentinel": "true",
        "logAnalyticsWorkspaceCappingDailyQuotaGb": -1,
        "logAnalyticsWorkspaceRetentionInDays": 30,
        "logAnalyticsWorkspaceSkuName": "PerGB2018",
        "logStorageSkuName": "Standard_GRS"
      }
    },
    "parRemoteAccess": {
      "value": {
        "enable": true,
        "enableJumpBoxes": true,
        "bastion": {
          "sku": "Standard",
          "subnetAddressPrefix": "10.0.100.160/27",
          "publicIPAddressAvailabilityZones": [],
          "linux": {
            "vmAdminUsername": "azureuser",
            "enableVmPasswordAuthentication": true,
            "vmAuthenticationType": "password",
            "vmAdminPasswordOrKey": "Rem0te@2020246",
            "vmSize": "Standard_B2s",
            "vmOsDiskCreateOption": "FromImage",
            "vmOsDiskType": "Standard_LRS",
            "vmImagePublisher": "Canonical",
            "vmImageOffer": "UbuntuServer",
            "vmImageSku": "18.04-LTS",
            "vmImageVersion": "latest",
            "networkInterfacePrivateIPAddressAllocationMethod": "Dynamic"
          },
          "windows": {
            "vmAdminUsername": "azureuser",
            "VmAdminPassword": "Rem0te@2020246",
            "vmSize": "Standard_DS1_v2",
            "vmOsDiskCreateOption": "FromImage",
            "VmStorageAccountType": "StandardSSD_LRS",
            "vmImagePublisher": "MicrosoftWindowsServer",
            "vmImageOffer": "WindowsServer",
            "vmImageSku": "2019-datacenter",
            "vmImageVersion": "latest",
            "networkInterfacePrivateIPAddressAllocationMethod": "Dynamic"
          }
        }
      }
    },
    "parSecurityCenter": {
      "value": {
        "enableDefender": true,
        "emailSecurityContact": "anoa@microsoft.com",
        "phoneSecurityContact": "5555555555"
      }
    }
  }
}