{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "parRequired": {
      "value": {
        "orgPrefix": "anoa",
        "templateVersion": "v1.0",
        "deployEnvironment": "dev"
      }
    },
    "parTags": {
      "value": {
        "organization": "anoa",
        "region": "eastus",
        "templateVersion": "v1.0",
        "deployEnvironment": "dev",
        "deploymentType": "NoOpsBicep"
      }
    },
    "parTenantId": {
      "value": "ded6b38d-d740-4564-ae25-2e3f041093be"
    },
    "parRootMg": {
      "value": "ANOA"
    },
    "parRequireAuthorizationForGroupCreation": {
      "value": true
    },
    "parManagementGroups": {
      "value": [
        {
          "name": "anoa",
          "displayName": "ANOA",
          "parentMGName": "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxx"
        },
        {
          "name": "anoa-lzs",
          "displayName": "anoa-lzs",
          "parentMGName": "anoa"
        },
        {
          "name": "anoa-lzs-sandbox",
          "displayName": "anoa-lzs-sandbox",
          "parentMGName": "anoa-lzs"
        },
        {
          "name": "anoa-lzs-workloads",
          "displayName": "anoa-lzs-workloads",
          "parentMGName": "anoa-lzs"
        },
        {
          "name": "anoa-lzs-internal",
          "displayName": "anoa-lzs-internal",
          "parentMGName": "anoa-lzs-workloads"
        },
        {
          "name": "anoa-lzs-internal-dev",
          "displayName": "anoa-lzs-internal-nonprod",
          "parentMGName": "anoa-lzs-internal"
        },
        {
          "name": "anoa-lzs-internal-prod",
          "displayName": "anoa-lzs-internal-prod",
          "parentMGName": "anoa-lzs-internal"
        },
        {
          "name": "anoa-platform",
          "displayName": "anoa-platform",
          "parentMGName": "anoa"
        },
        {
          "name": "anoa-transport",
          "displayName": "anoa-transport",
          "parentMGName": "anoa-platform"
        },
        {
          "name": "anoa-management",
          "displayName": "anoa-management",
          "parentMGName": "anoa-platform"
        },
        {
          "name": "anoa-identity",
          "displayName": "anoa-identity",
          "parentMGName": "anoa-platform"
        }
      ]
    },
    "parSubscriptions": {
      "value": [
        {
          "subscriptionId": "<<subscriptionId>>",
          "managementGroupName": "anoa-management"
        }
      ]
    },    
    "parRoleDefinitionInfo": {
      "value": {
        "definitions": [
          {
            "roleID": "2d9dd916-3148-4538-8039-c1e3f270dd2a",
            "roleName": "Custom - VM Operator",
            "roleDescription": "Start and Stop Virtual Machines and reader",
            "actions": [
              "Microsoft.Compute/virtualMachines/read",
              "Microsoft.Compute/virtualMachines/start/action",
              "Microsoft.Compute/virtualMachines/restart/action",
              "Microsoft.Resources/subscriptions/resourceGroups/read",
              "Microsoft.Compute/virtualMachines/deallocate/action",
              "Microsoft.Compute/virtualMachineScaleSets/deallocate/action",
              "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/deallocate/action",
              "Microsoft.Compute/virtualMachines/powerOff/action"
            ],
            "notActions": [],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "c5d1e887-501c-43db-8007-8920f91133f6",
            "roleName": "Custom - Network Operations (NetOps)",
            "roleDescription": "Platform-wide global connectivity management: virtual networks, UDRs, NSGs, NVAs, VPN, Azure ExpressRoute, and others.",
            "actions": [
              "Microsoft.Network/virtualNetworks/read",
              "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/read",
              "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/write",
              "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/delete",
              "Microsoft.Network/virtualNetworks/peer/action",
              "Microsoft.Resources/deployments/operationStatuses/read",
              "Microsoft.Resources/deployments/write",
              "Microsoft.Resources/deployments/read"
            ],
            "notActions": [],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "b3303549-706a-4ad6-8b4c-2e99ec358747",
            "roleName": "Custom - Security Operations (SecOps)",
            "roleDescription": "Security Administrator role with a horizontal view across the entire Azure estate and the Azure Key Vault purge policy.",
            "actions": [
              "*/read",
              "*/register/action",
              "Microsoft.KeyVault/locations/deletedVaults/purge/action",
              "Microsoft.PolicyInsights/*",
              "Microsoft.Authorization/policyAssignments/*",
              "Microsoft.Authorization/policyDefinitions/*",
              "Microsoft.Authorization/policyExemptions/*",
              "Microsoft.Authorization/policySetDefinitions/*",
              "Microsoft.Insights/alertRules/*",
              "Microsoft.Resources/deployments/*",
              "Microsoft.Security/*",
              "Microsoft.Support/*"
            ],
            "notActions": [],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "76385155-d4af-492a-afcd-9b53024d1044",
            "roleName": "Custom - Landing Zone Application Owner",
            "roleDescription": "Contributor role granted for application/operations team at resource group level.",
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/write",
              "Microsoft.Network/publicIPAddresses/write",
              "Microsoft.Network/virtualNetworks/write",
              "Microsoft.KeyVault/locations/deletedVaults/purge/action"
            ],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "ebe12bfa-546e-4edb-a8b3-9930960f0f49",
            "roleName": "Custom - Landing Zone Subscription Owner",
            "roleDescription": "Delegated role for subscription owner generated from subscription Owner role.",
            "actions": [
              "*"
            ],
            "notActions": [
              "Microsoft.Authorization/*/write",
              "Microsoft.Network/vpnGateways/*",
              "Microsoft.Network/expressRouteCircuits/*",
              "Microsoft.Network/routeTables/write",
              "Microsoft.Network/vpnSites/*"
            ],
            "dataActions": [],
            "notDataActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          },
          {
            "roleID": "068f0787-44d0-4834-a839-2136b22e2c35",
            "roleName": "Custom - Storage Operator",
            "roleDescription": "Custom Storage Operator role for deploying virtual machines.",
            "actions": [
              "Microsoft.Authorization/*/read",
              "Microsoft.Insights/alertRules/*",
              "Microsoft.Insights/diagnosticSettings/*",
              "Microsoft.Network/virtualNetworks/subnets/joinViaServiceEndpoint/action",
              "Microsoft.ResourceHealth/availabilityStatuses/read",
              "Microsoft.Resources/deployments/*",
              "Microsoft.Resources/subscriptions/resourceGroups/read",
              "Microsoft.Storage/storageAccounts/*",
              "Microsoft.Support/*",
              "Microsoft.Storage/storageAccounts/listkeys/action"
            ],
            "notActions": [],
            "scopeType": "ManagementGroup",
            "scopeName": "anoalz"
          }
        ]
      }
    },
    "parHub": {
      "value": {
        "subscriptionId": "<<subscriptionId>>",
        "virtualNetworkAddressPrefix": "10.0.100.0/24",
        "subnetAddressPrefix": "10.0.100.128/27",
        "subnets": [
          {
            "name": "AzureFirewallSubnet",
            "addressPrefix": "10.0.100.0/26",
            "serviceEndpoints": []
          },
          {
            "name": "AzureFirewallManagementSubnet",
            "addressPrefix": "10.0.100.64/26",
            "serviceEndpoints": []
          }
        ],
        "virtualNetworkDiagnosticsLogs": [],
        "virtualNetworkDiagnosticsMetrics": [],
        "networkSecurityGroupRules": [],
        "networkSecurityGroupDiagnosticsLogs": [
          "NetworkSecurityGroupEvent",
          "NetworkSecurityGroupRuleCounter"
        ],
        "subnetServiceEndpoints": [
          {
            "service": "Microsoft.Storage"
          }
        ],
        "storageAccountAccess": {
          "enableRoleAssignmentForStorageAccount": false,
          "principalIds": [
            "7bc6bc45-b256-407c-9d79-bde13dfb5639"
          ],
          "roleDefinitionIdOrName": "Contributor"
        }
      }
    },
    "parOperationsSpoke": {
      "value": {
        "subscriptionId": "<<subscriptionId>>",
        "virtualNetworkAddressPrefix": "10.0.115.0/26",
        "subnetAddressPrefix": "10.0.115.0/27",
        "virtualNetworkDiagnosticsLogs": [],
        "virtualNetworkDiagnosticsMetrics": [],
        "networkSecurityGroupRules": [],
        "publicIPAddressDiagnosticsLogs": [
          "DDoSProtectionNotifications",
          "DDoSMitigationFlowLogs",
          "DDoSMitigationReports"
        ],
        "networkSecurityGroupDiagnosticsLogs": [
          "NetworkSecurityGroupEvent",
          "NetworkSecurityGroupRuleCounter"
        ],
        "subnetServiceEndpoints": [
          {
            "service": "Microsoft.Storage"
          }
        ],
        "storageAccountAccess": {
          "enableRoleAssignmentForStorageAccount": false,
          "principalIds": [
            "7bc6bc45-b256-407c-9d79-bde13dfb5639"
          ],
          "roleDefinitionIdOrName": "Contributor"
        }
      }
    },
    "parNetworkArtifacts": {
      "value": {
        "enable": false,
        "artifactsKeyVault": {
          "keyVaultPolicies": {
            "objectId": "7bc6bc45-b256-407c-9d79-bde13dfb5639",
            "permissions": {
              "keys": [
                "get",
                "list",
                "update"
              ],
              "secrets": [
                "all"
              ]
            },
            "tenantId": "<<tenantId>>"
          }
        },
        "storageAccountAccess": {
          "enableRoleAssignmentForStorageAccount": false,
          "principalIds": [
            "7bc6bc45-b256-407c-9d79-bde13dfb5639"
          ],
          "roleDefinitionIdOrName": "Contributor"
        }
      }
    },
    "parDdosStandard": {
      "value": {
        "enable": false
      }
    },
    "parAzureFirewall": {
      "value": {
        "enable": true,
        "clientPublicIPAddressAvailabilityZones": [],
        "managementPublicIPAddressAvailabilityZones": [],
        "supernetIPAddress": "10.0.96.0/19",
        "skuTier": "Premium",
        "threatIntelMode": "Alert",
        "intrusionDetectionMode": "Alert",
        "publicIPAddressDiagnosticsLogs": [
          "DDoSProtectionNotifications",
          "DDoSMitigationFlowLogs",
          "DDoSMitigationReports"
        ],
        "publicIPAddressDiagnosticsMetrics": [
          "AllMetrics"
        ],
        "diagnosticsLogs": [
          "AzureFirewallApplicationRule",
          "AzureFirewallNetworkRule",
          "AzureFirewallDnsProxy"
        ],
        "diagnosticsMetrics": [
          "AllMetrics"
        ],
        "storageAccountAccess": {
          "value": {
            "enableRoleAssignmentForStorageAccount": false,
            "principalIds": [
              "7bc6bc45-b256-407c-9d79-bde13dfb5639"
            ],
            "roleDefinitionIdOrName": "Contributor"
          }
        }
      }
    },
    "parLogging": {
      "value": {
        "enableSentinel": true,
        "logAnalyticsWorkspaceCappingDailyQuotaGb": -1,
        "logAnalyticsWorkspaceRetentionInDays": 30,
        "logAnalyticsWorkspaceSkuName": "PerGB2018",
        "logStorageSkuName": "Standard_GRS",
        "storageAccountAccess": {
          "enableRoleAssignmentForStorageAccount": false,
          "principalIds": [
            "7bc6bc45-b256-407c-9d79-bde13dfb5639"
          ],
          "roleDefinitionIdOrName": "Contributor"
        }
      }
    },
    "parRemoteAccess": {
      "value": {
        "enable": true,
        "bastion": {
          "sku": "Standard",
          "subnetAddressPrefix": "10.0.100.160/27",
          "publicIPAddressAvailabilityZones": [],
          "encryptionAtHost": false,
          "linux": {
            "enable": true,
            "vmName": "bastion-linux",
            "vmAdminUsername": "azureuser",
            "disablePasswordAuthentication": false,
            "vmAdminPasswordOrKey": "Rem0te@2020246",
            "vmSize": "Standard_DS1_v2",
            "vmOsDiskCreateOption": "FromImage",
            "vmOsDiskType": "Standard_LRS",
            "vmImagePublisher": "Canonical",
            "vmImageOffer": "UbuntuServer",
            "vmImageSku": "18.04-LTS",
            "vmImageVersion": "latest",
            "networkInterfacePrivateIPAddressAllocationMethod": "Dynamic"
          },
          "windows": {
            "enable": true,
            "vmName": "bastion-windows",
            "vmAdminUsername": "azureuser",
            "vmAdminPassword": "Rem0te@2020246",
            "vmSize": "Standard_DS1_v2",
            "vmOsDiskCreateOption": "FromImage",
            "vmStorageAccountType": "StandardSSD_LRS",
            "vmImagePublisher": "MicrosoftWindowsServer",
            "vmImageOffer": "WindowsServer",
            "vmImageSku": "2019-datacenter",
            "vmImageVersion": "latest",
            "networkInterfacePrivateIPAddressAllocationMethod": "Dynamic"
          },
          "customScriptExtension": {
            "install": false,
            "script64": ""
          }
        }
      }
    },
    "parSecurityCenter": {
      "value": {
        "enableDefender": true,
        "alertNotifications": "Off",
        "alertsToAdminsNotifications": "Off",
        "emailSecurityContact": "anoa@microsoft.com",
        "phoneSecurityContact": "5555555555"
      }
    }
  }
}